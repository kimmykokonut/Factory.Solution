@{
  Layout = "_Layout";
}
@using Factory.Models
@model Factory.Models.Engineer

<div class="container text-center">
  <h2>Engineer Details</h2>
  <hr />
  <div class="itemDeets">
    <h3>@Html.DisplayFor(model => model.Name)</h3>
    <hr />
    <h4>@Html.DisplayNameFor(model => model.Level): @Html.DisplayFor(model => model.Level)</h4>
    <h4>@Html.DisplayNameFor(model => model.Phone): @Html.DisplayFor(model => model.Phone)</h4>

    <h4>Date Hired: @Html.DisplayFor(model => model.HireDate)</h4>
    @if (Model.IsActive)
    {
      <h4>Status: Working</h4>
    }
    else
    {
      <h4>Status: Idle</h4>
    }
    @using (Html.BeginForm("ChangeStatus", "Engineers", new { id = Model.EngineerId }))
    {
      <label>Change status</label>
      <input type="submit" value="working/idle" />
    }

    <h4>License expiration: @Html.DisplayFor(model => model.Renewal)</h4>
    <hr />
    @if (@Model.JoinEntities.Count == 0)
    {
      <p>No machines currently assigned</p>
    }
    else
    {
      <h4>Machines assigned: </h4>
      @foreach (EngineerMachine join in Model.JoinEntities)
      {
        <div class="d-flex block">
          <h4>@join.Machine.Name</h4>
          @using (Html.BeginForm("DeleteJoin", "Engineers"))
          {
            @Html.Hidden("joinId", @join.EngineerMachineId)
            <input type="submit" value="üóëÔ∏è" />
          }
        </div>
      }
    }
    <hr />
    <p>@Html.ActionLink("‚äï Add an engineer", "Create")</p>
    <p>@Html.ActionLink("üîÑ Update info", "Edit", new { id = Model.EngineerId })</p>
    <p>@Html.ActionLink("üóëÔ∏è Delete", "Delete", new { id = Model.EngineerId })</p>

    <p>@Html.ActionLink("‚äï Add a machine", "AddMachine", new { id = Model.EngineerId })</p>
  </div>
</div>